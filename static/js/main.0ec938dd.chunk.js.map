{"version":3,"sources":["components/Layout/Topbar.js","components/Layout/index.js","components/Pages/Dashboard.js","components/Palettes/Table.js","components/Palettes/AddPaletteModal.js","components/Pages/Palettes.js","components/Pages/Reports.js","components/Pages/Zones.js","App.js","serviceWorker.js","index.js"],"names":["DashboardLink","props","react","Link","Object","assign","to","PaletteLink","ZoneLink","ReportLink","Topbar","state","anchorEl","handleProfileMenuOpen","event","_this","setState","currentTarget","handleMenuClose","this","classes","isMenuOpen","Boolean","renderMenu","index_es","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","onClick","position","variant","color","component","className","classNames","button","leftMargin","style","flexGrow","badgeContent","Notifications_default","a","React","withStyles","theme","palette","getContrastText","teal","backgroundColor","&:hover","borderBottom","marginLeft","createMuiTheme","primary","main","secondary","pink","Layout","_ref","children","objectWithoutProperties","core_styles","Layout_Topbar","Dashboard","container","PaletteTable","pallets","palletInterval","getPallets","axios","get","then","response","values","data","catch","e","console","error","setInterval","clearInterval","columns","Header","accessor","Cell","value","es","AddPaletteModal","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","name","shipDate","Date","toISOString","handleTextFieldChange","defineProperty","target","submitNewPalette","newPalette","date_created","shipment_date","patch","log","closeDialog","inherits","createClass","key","fullWidth","label","onChange","margin","type","Palettes","handleAddPalette","root","spacing","fluid","item","xs","row","AddPaletteModal_AddPaletteModal","Table","padding","marginBottom","Reports","Zones","zones","zoneInterval","getZones","zonesState","keys","map","current_pallets","pallet","zone","border","display","width","height","lineHeight","textAlign","App","react_default","createElement","BrowserRouter","Layout_Layout","Switch","Route","exact","path","Component","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wXAQMA,EAAgB,SAAAC,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,KAAQL,KAC1CM,EAAc,SAAAN,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,aAAgBL,KAChDO,EAAW,SAAAP,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,UAAaL,KAC1CQ,EAAa,SAAAR,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,YAAeL,KAE9CS,6MACFC,MAAQ,CACJC,SAAU,QAGdC,sBAAwB,SAAAC,GACxBC,EAAKC,SAAS,CAAEJ,SAAUE,EAAMG,mBAGhCC,gBAAkB,WACdH,EAAKC,SAAS,CAAEJ,SAAU,gFAGtB,IACCA,EAAYO,KAAKR,MAAjBC,SACAQ,EAAWD,KAAKlB,MAAhBmB,QACCC,EAAaC,QAAQV,GAErBW,EACFrB,EAAA,cAACsB,EAAA,EAAD,CACEZ,SAAUA,EACVa,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDE,KAAMR,EACNS,QAASX,KAAKD,iBAEdhB,EAAA,cAACsB,EAAA,EAAD,CAAUO,QAASZ,KAAKD,iBAAxB,SACAhB,EAAA,cAACsB,EAAA,EAAD,CAAUO,QAASZ,KAAKD,iBAAxB,YAIN,OACIhB,EAAA,cAACsB,EAAA,EAAD,CAAQQ,SAAS,UACb9B,EAAA,cAACsB,EAAA,EAAD,KACItB,EAAA,cAACsB,EAAA,EAAD,CAAYS,QAAQ,KAAKC,MAAM,WAA/B,gBACAhC,EAAA,cAACsB,EAAA,EAAD,CAAQW,UAAWnC,EAAeoC,UAAWC,IAAWjB,EAAQkB,OAAQlB,EAAQmB,aAAhF,aACArC,EAAA,cAACsB,EAAA,EAAD,CAAQW,UAAW5B,EAAa6B,UAAWhB,EAAQkB,QAAnD,WACApC,EAAA,cAACsB,EAAA,EAAD,CAAQW,UAAW3B,EAAU4B,UAAWhB,EAAQkB,QAAhD,SACApC,EAAA,cAACsB,EAAA,EAAD,CAAQW,UAAW1B,EAAY2B,UAAWhB,EAAQkB,QAAlD,WACApC,EAAA,qBAAKsC,MAAO,CAACC,SAAU,KACvBvC,EAAA,yBACIA,EAAA,cAACsB,EAAA,EAAD,CAAYU,MAAM,UAAUH,QAASZ,KAAKN,uBACtCX,EAAA,cAACsB,EAAA,EAAD,CAAOkB,aAAc,GAAIR,MAAM,aAC/BhC,EAAA,cAACyC,EAAAC,EAAD,SAIPrB,WA/CAsB,aAoENC,uBAdA,SAAAC,GAAK,MAAK,CACrBT,OAAQ,CACJJ,MAAOa,EAAMC,QAAQC,gBAAgBC,OAAK,MAC1CC,gBAAiBD,OAAK,KACtBE,UAAW,CACPD,gBAAiBD,OAAK,KACtBG,aAAc,oBAGtBd,WAAY,CACRe,WAAY,UAILR,CAAmBpC,GC5E5BqC,EAAQQ,yBAAe,CACzBP,QAAS,CACPQ,QAAS,CAAEC,KAAMP,OAAK,MACtBQ,UAAW,CAAED,KAAME,OAAI,SAIhBC,EAAS,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,SAAwB1D,OAAA2D,EAAA,EAAA3D,CAAAyD,EAAA,cAC5C,OACI3D,EAAA,cAAC8D,EAAA,iBAAD,CAAkBjB,MAAOA,GACrB7C,EAAA,cAAC+D,EAAD,MACKH,ICbJI,EAAW,WACpB,OACIhE,EAAA,cAACsB,EAAA,EAAD,CAAM2C,WAAS,GAAf,wCC+COC,6MA/CbzD,MAAQ,CACN0D,QAAS,MAGXC,eAAiB,OAWjBC,WAAa,WAETC,IAAMC,IADI,8DAETC,KAAK,SAAAC,GACF5D,EAAKC,SAAS,CAACqD,QAASjE,OAAOwE,OAAOD,EAASE,UAElDC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,yFAflB5D,KAAKoD,aACLpD,KAAKmD,eAAkBY,YAAY/D,KAAKoD,WAAY,qDAItDY,cAAchE,KAAKmD,iDAcnB,IAAMc,EAAU,CAAC,CACbC,OAAQ,eACRC,SAAU,gBACV,CACAD,OAAQ,OACRC,SAAU,QACT,CACDD,OAAQ,qBACRC,SAAU,gBACVC,KAAM,SAAAtF,GAAK,OAAIC,EAAA,sBAAMkC,UAAU,UAAUnC,EAAMuF,UAGnD,OACItF,EAAA,cAACuF,EAAA,EAAD,CACIZ,KAAM1D,KAAKR,MAAM0D,QACjBe,QAASA,WA1CMvC,qBCAd6C,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA7E,EAAAX,OAAAyF,EAAA,EAAAzF,CAAAe,KAAAuE,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAApF,EAAAX,OAAAgG,EAAA,EAAAhG,CAAAe,MAAAyE,EAAAxF,OAAAiG,EAAA,EAAAjG,CAAAsF,IAAAY,KAAAC,MAAAX,EAAA,CAAAzE,MAAAqF,OAAAP,MACItF,MAAQ,CACJ8F,KAAM,GACNC,UAAU,IAAIC,MAAOC,eAH7B7F,EAMI8F,sBAAwB,SAAAJ,GAAI,OAAI,SAAA1B,GAC5BhE,EAAKC,SAALZ,OAAA0G,EAAA,EAAA1G,CAAA,GAAgBqG,EAAO1B,EAAEgC,OAAOvB,UAPxCzE,EAUIiG,iBAAmB,WACf,IACIC,EAAU7G,OAAA0G,EAAA,EAAA1G,CAAA,GAAKW,EAAKJ,MAAM8F,KAAO,CACjCA,KAAM1F,EAAKJ,MAAM8F,KACjBS,cAAc,IAAIP,MAAOC,cACzBO,cAAepG,EAAKJ,MAAM+F,WAG9BlC,IAAM4C,MAPI,6DAOOH,GAChBvC,KAAK,SAAAC,GACFK,QAAQqC,IAAI1C,GACZ5D,EAAKd,MAAMqH,cACXvG,EAAKC,SAAS,CAACyF,KAAM,GAAIC,UAAU,IAAIC,MAAOC,kBAEjD9B,MAAM,SAAAC,GACHC,QAAQC,MAAMF,MAzB1BhE,EAAA,OAAAX,OAAAmH,EAAA,EAAAnH,CAAAsF,EAAAC,GAAAvF,OAAAoH,EAAA,EAAApH,CAAAsF,EAAA,EAAA+B,IAAA,SAAAjC,MAAA,WA8BQ,OACItF,EAAA,cAACsB,EAAA,EAAD,CAAQK,KAAMV,KAAKlB,MAAM4B,KAAMC,QAASX,KAAKlB,MAAMqH,aAC/CpH,EAAA,cAACsB,EAAA,EAAD,0BACAtB,EAAA,cAACsB,EAAA,EAAD,KACItB,EAAA,cAACsB,EAAA,EAAD,CACIkG,WAAS,EACTzF,QAAQ,SACR0F,MAAM,OACNnC,MAAOrE,KAAKR,MAAM8F,KAClBmB,SAAUzG,KAAK0F,sBAAsB,QACrCgB,OAAO,WACP3H,EAAA,cAACsB,EAAA,EAAD,CACAkG,WAAS,EACTzF,QAAQ,SACR0F,MAAM,yBACNnC,MAAOrE,KAAKR,MAAM+F,SAClBkB,SAAUzG,KAAK0F,sBAAsB,YACrCgB,OAAO,SACPC,KAAK,oBAEb5H,EAAA,cAACsB,EAAA,EAAD,KACItB,EAAA,cAACsB,EAAA,EAAD,CAAQO,QAASZ,KAAKlB,MAAMqH,YAAapF,MAAM,WAA/C,UAGAhC,EAAA,cAACsB,EAAA,EAAD,CAAQO,QAASZ,KAAK6F,iBAAkB9E,MAAM,WAA9C,aAtDpBwD,EAAA,CAAqC7C,aCE/BkF,6MACFpH,MAAQ,CACJkB,MAAM,KAGVmG,iBAAmB,WACfjH,EAAKC,SAAS,CAACa,MAAM,OAGzByF,YAAc,WACVvG,EAAKC,SAAS,CAACa,MAAM,6EAGjB,IACCT,EAAWD,KAAKlB,MAAhBmB,QACL,OACIlB,EAAA,qBAAKkC,UAAWhB,EAAQ6G,MACpB/H,EAAA,cAACsB,EAAA,EAAD,CAAM2C,WAAS,EAAC+D,QAAS,GAAI9F,UAAWhB,EAAQ+G,OAC5CjI,EAAA,cAACsB,EAAA,EAAD,CAAM4G,MAAI,EAACC,GAAI,GAAIjG,UAAWhB,EAAQkH,KAAKpI,EAAA,cAACsB,EAAA,EAAD,CAAYS,QAAQ,MAApB,WAA8C/B,EAAA,cAACsB,EAAA,EAAD,OACzFtB,EAAA,cAACsB,EAAA,EAAD,CAAM4G,MAAI,EAACC,GAAI,GAAIjG,UAAWhB,EAAQkH,KAClCpI,EAAA,cAACsB,EAAA,EAAD,CAAQS,QAAQ,YAAYC,MAAM,UAAUH,QAASZ,KAAK6G,kBAA1D,cACA9H,EAAA,cAACqI,EAAD,CAAiB1G,KAAMV,KAAKR,MAAMkB,KAAMyF,YAAanG,KAAKmG,eAE9DpH,EAAA,cAACsB,EAAA,EAAD,CAAM4G,MAAI,EAACC,GAAI,GAAIjG,UAAWhB,EAAQkH,KAClCpI,EAAA,cAACsB,EAAA,EAAD,KAAOtB,EAAA,cAACsI,EAAD,CAAO3D,KAAM1D,KAAKR,MAAM0D,qBAxBhCxB,aA6CRC,uBAbA,CACXmF,KAAM,CACFxF,SAAU,EACVU,gBAAiB,WAErBgF,MAAO,CACHM,QAAS,QAEbH,IAAK,CACDI,aAAc,SAIP5F,CAAmBiF,GChDrBY,EAAS,WAClB,OACIzI,EAAA,cAACsB,EAAA,EAAD,CAAM2C,WAAS,GAAf,YCAFyE,6MACFjI,MAAQ,CACJkI,MAAO,MAGXC,aAAe,OAWfC,SAAW,WAEPvE,IAAMC,IADI,0DAETC,KAAK,SAAAC,GAEF5D,EAAKC,SAAS,CAAC6H,MAAOlE,EAASE,SAElCC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,yFAhBlB5D,KAAK4H,WACL5H,KAAK2H,aAAe5D,YAAY/D,KAAK4H,SAAU,qDAI/C5D,cAAchE,KAAK2H,+CAef,IACC1H,EAAWD,KAAKlB,MAAhBmB,QACD4H,EAAa7H,KAAKR,MAAMkI,MACxBA,EAAQ,KAeZ,OAdGG,IACCH,EAAQzI,OAAO6I,KAAKD,GAAYE,IAAI,SAACzB,GACjC,IAAIpD,EAAU2E,EAAWvB,GAAK0B,gBAAgBD,IAAI,SAACzC,GAC/C,OAAOvG,EAAA,cAACsB,EAAA,EAAD,CAAOY,UAAWhB,EAAQgI,QAAS3C,KAG9C,OACIvG,EAAA,cAACsB,EAAA,EAAD,CAAM4G,MAAI,EAACC,GAAI,EAAGjG,UAAWhB,EAAQiI,MACpC5B,EACApD,MAMTnE,EAAA,qBAAKkC,UAAWhB,EAAQ6G,MACpB/H,EAAA,cAACsB,EAAA,EAAD,CAAM2C,WAAS,EAAC+D,QAAS,GAAI9F,UAAWhB,EAAQ+G,OAC5CjI,EAAA,cAACsB,EAAA,EAAD,CAAM4G,MAAI,EAACC,GAAI,GAAIjG,UAAWhB,EAAQkH,KAAKpI,EAAA,cAACsB,EAAA,EAAD,CAAYS,QAAQ,MAApB,SAA4C/B,EAAA,cAACsB,EAAA,EAAD,OACtFqH,WAlDDhG,aAkFLC,uBAzBA,CACXmF,KAAM,CACFxF,SAAU,EACVU,gBAAiB,WAErBgF,MAAO,CACHM,QAAS,QAEbH,IAAK,CACDI,aAAc,QAElBW,KAAM,CACFZ,QAAS,OACTa,OAAQ,mBAEZF,OAAQ,CACJG,QAAS,eACTC,MAAO,OACPC,OAAQ,OACR5B,OAAQ,OACR6B,WAAY,OACZC,UAAW,WAIJ7G,CAAmB8F,GChEnBgB,mLAfX,OACEC,EAAAjH,EAAAkH,cAACC,EAAA,EAAD,KACEF,EAAAjH,EAAAkH,cAACE,EAAD,KACEH,EAAAjH,EAAAkH,cAACG,EAAA,EAAD,KACEJ,EAAAjH,EAAAkH,cAACI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjI,UAAW+B,IACjC2F,EAAAjH,EAAAkH,cAACI,EAAA,EAAD,CAAOE,KAAK,YAAYjI,UAAW4F,IACnC8B,EAAAjH,EAAAkH,cAACI,EAAA,EAAD,CAAOE,KAAK,SAASjI,UAAWyG,IAChCiB,EAAAjH,EAAAkH,cAACI,EAAA,EAAD,CAAOE,KAAK,WAAWjI,UAAWwG,cAT5B0B,aCME/I,QACW,cAA7BgJ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAjH,EAAAkH,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvG,KAAK,SAAAwG,GACjCA,EAAaC","file":"static/js/main.0ec938dd.chunk.js","sourcesContent":["import * as React from 'react';\nimport {AppBar, Toolbar, Typography, Button, IconButton, Badge, Menu, MenuItem} from '@material-ui/core';\nimport {teal} from '@material-ui/core/colors';\nimport {withStyles} from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst DashboardLink = props => <Link to=\"/\" {...props} />\nconst PaletteLink = props => <Link to=\"/palettes\" {...props} />\nconst ZoneLink = props => <Link to=\"/zones\" {...props} />\nconst ReportLink = props => <Link to=\"/reports\" {...props} />\n\nclass Topbar extends React.Component{\n    state = {\n        anchorEl: null\n      };\n    \n    handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n      };    \n\n    render(){\n        let {anchorEl} = this.state;\n        let {classes} = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n\n        const renderMenu = (\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={isMenuOpen}\n              onClose={this.handleMenuClose}\n            >\n              <MenuItem onClick={this.handleMenuClose}>stuff</MenuItem>\n              <MenuItem onClick={this.handleMenuClose}>stuff 2</MenuItem>\n            </Menu>\n          );\n\n        return(\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <Typography variant=\"h5\" color=\"inherit\">InventoryLab</Typography>\n                    <Button component={DashboardLink} className={classNames(classes.button, classes.leftMargin)}>Dashboard</Button>\n                    <Button component={PaletteLink} className={classes.button}>Pallets</Button>\n                    <Button component={ZoneLink} className={classes.button}>Zones</Button>\n                    <Button component={ReportLink} className={classes.button}>Reports</Button>\n                    <div style={{flexGrow: 1}}></div>\n                    <div>\n                        <IconButton color=\"inherit\" onClick={this.handleProfileMenuOpen}>\n                            <Badge badgeContent={17} color=\"secondary\">\n                            <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                    </div>\n                    {renderMenu}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nconst styles = theme => ({\n    button: {\n        color: theme.palette.getContrastText(teal[500]),\n        backgroundColor: teal[500],\n        '&:hover': {\n            backgroundColor: teal[500],\n            borderBottom: 'solid 2px white'\n        }\n    },\n    leftMargin: {\n        marginLeft: '50px'\n    }\n})\n\nexport default withStyles(styles)(Topbar);","import * as React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {teal, pink} from '@material-ui/core/colors';\nimport Topbar from './Topbar';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: { main: teal[500] },\n      secondary: { main: pink[\"A400\"] },\n    },\n  });\n\nexport const Layout = ({children, ...props}) => {\n    return(\n        <MuiThemeProvider theme={theme}>\n            <Topbar />\n                {children}\n        </MuiThemeProvider>\n    );\n}","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const Dashboard =()=>{\n    return(\n        <Grid container>\n            Dashboard\n        </Grid>\n    );\n}","import * as React from 'react';\nimport ReactTable from \"react-table\";\nimport axios from 'axios';\n\nclass PaletteTable extends React.Component{\n  state = {\n    pallets: []\n  }\n\n  palletInterval = null;\n\n  componentDidMount(){\n      this.getPallets();\n      this.palletInterval =  setInterval(this.getPallets, 2500)\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.palletInterval);\n  }\n\n  getPallets = () => {\n      let url = \"https://foodbankpallettracker.firebaseio.com/Palettes.json\";\n      axios.get(url)\n      .then(response => {\n          this.setState({pallets: Object.values(response.data)});\n      })\n      .catch(e => {\n          console.error(e);\n      })\n  }\n  render(){\n    const columns = [{\n        Header: 'Date created',\n        accessor: 'date_created'\n      },{\n        Header: 'Name',\n        accessor: 'name'\n      }, {\n        Header: 'Expected ship date',\n        accessor: 'shipment_date',\n        Cell: props => <span className='number'>{props.value}</span>\n      }]\n    \n    return(\n        <ReactTable\n            data={this.state.pallets}\n            columns={columns}\n        />\n    );\n  }\n}\n\nexport default PaletteTable;","import * as React from 'react';\nimport {Dialog, DialogContent, DialogTitle, DialogActions, Button, TextField} from '@material-ui/core'\nimport axios from 'axios';\n\nexport class AddPaletteModal extends React.Component{\n    state = {\n        name: \"\",\n        shipDate: new Date().toISOString()\n    }\n\n    handleTextFieldChange = name => e => {\n        this.setState({[name]: e.target.value});\n    }\n\n    submitNewPalette = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Palettes.json\";\n        let newPalette = {[this.state.name]: {\n            name: this.state.name,\n            date_created: new Date().toISOString(),\n            shipment_date: this.state.shipDate\n        }}\n        \n        axios.patch(url, newPalette)\n        .then(response => {\n            console.log(response);\n            this.props.closeDialog();\n            this.setState({name: \"\", shipDate: new Date().toISOString()})\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n\n    render(){\n        return(\n            <Dialog open={this.props.open} onClose={this.props.closeDialog}>\n                <DialogTitle>Add a new Palette</DialogTitle>\n                <DialogContent>\n                    <TextField \n                        fullWidth \n                        variant=\"filled\" \n                        label=\"Name\" \n                        value={this.state.name} \n                        onChange={this.handleTextFieldChange('name')}\n                        margin=\"normal\"/>\n                        <TextField \n                        fullWidth \n                        variant=\"filled\" \n                        label=\"Shipment date and time\" \n                        value={this.state.shipDate} \n                        onChange={this.handleTextFieldChange('shipDate')}\n                        margin=\"normal\"\n                        type=\"datetime-local\"/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.props.closeDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.submitNewPalette} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}","import * as React from \"react\";\nimport { Grid, Typography, Divider, Button, Paper } from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Table from '../Palettes/Table';\nimport {AddPaletteModal} from '../Palettes/AddPaletteModal';\n\nclass Palettes extends React.Component{\n    state = {\n        open: false\n    }\n\n    handleAddPalette = () => {\n        this.setState({open: true});\n    }\n\n    closeDialog = () => {\n        this.setState({open: false});\n    }\n\n    render(){\n        let {classes} = this.props;\n        return(\n            <div className={classes.root}>\n                <Grid container spacing={16} className={classes.fluid}>\n                    <Grid item xs={12} className={classes.row}><Typography variant=\"h3\" >Pallets</Typography><Divider /></Grid>\n                    <Grid item xs={12} className={classes.row}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleAddPalette}>Add pallet</Button>\n                        <AddPaletteModal open={this.state.open} closeDialog={this.closeDialog}/>\n                    </Grid>\n                    <Grid item xs={12} className={classes.row}>\n                        <Paper><Table data={this.state.pallets}/></Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#f0f0f0'\n    },\n    fluid: {\n        padding: '20px'\n    },\n    row: {\n        marginBottom: '10px'\n    }\n}\n\nexport default withStyles(styles)(Palettes);","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const Reports =()=>{\n    return(\n        <Grid container>\n            Reports\n        </Grid>\n    );\n}","import * as React from \"react\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\n\nclass Zones extends React.Component{\n    state = {\n        zones: {}\n    }\n\n    zoneInterval = null;\n    \n    componentDidMount(){\n        this.getZones();\n        this.zoneInterval = setInterval(this.getZones, 2500);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.zoneInterval);\n    }\n\n    getZones = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Zone.json\";\n        axios.get(url)\n        .then(response => {\n            //console.log(response.data);\n            this.setState({zones: response.data});\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n\n    render(){\n        let {classes} = this.props;\n        let zonesState = this.state.zones;\n        let zones = null;\n        if(zonesState)\n            zones = Object.keys(zonesState).map((key) => {\n                let pallets = zonesState[key].current_pallets.map((name) => {\n                    return <Paper className={classes.pallet}>{name}</Paper>\n                })\n\n                return (\n                    <Grid item xs={6} className={classes.zone}>\n                    {key}\n                    {pallets}\n                    </Grid>\n                )\n        });\n        \n        return(\n            <div className={classes.root}>\n                <Grid container spacing={16} className={classes.fluid}>\n                    <Grid item xs={12} className={classes.row}><Typography variant=\"h3\" >Zones</Typography><Divider /></Grid>\n                    {zones}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#f0f0f0'\n    },\n    fluid: {\n        padding: '20px'\n    },\n    row: {\n        marginBottom: '10px'\n    },\n    zone: {\n        padding: '10px',\n        border: '1px solid black'\n    },\n    pallet: {\n        display: 'inline-block',\n        width: '50px',\n        height: '50px',\n        margin: '10px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    }\n}\n\nexport default withStyles(styles)(Zones);","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Layout} from './components/Layout';\nimport {Dashboard, Palettes, Reports, Zones} from './components/Pages'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}/>\n            <Route path=\"/palettes\" component={Palettes} />\n            <Route path=\"/zones\" component={Zones} />\n            <Route path=\"/reports\" component={Reports} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}