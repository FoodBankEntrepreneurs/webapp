{"version":3,"sources":["components/Layout/Topbar.js","components/Layout/index.js","components/Pages/Dashboard.js","components/Palettes/Table.js","components/Palettes/AddPaletteModal.js","components/Pages/Palettes.js","components/Pages/Reports.js","components/Pages/Zones.js","App.js","serviceWorker.js","index.js"],"names":["DashboardLink","props","react","Link","Object","assign","to","PaletteLink","ZoneLink","Topbar","state","anchorEl","zones","zoneInterval","getZones","axios","get","then","response","_this","setState","data","catch","e","console","error","handleProfileMenuOpen","event","currentTarget","handleMenuClose","this","setInterval","clearInterval","classes","isMenuOpen","Boolean","notificationNum","zonesState","notifications","keys","map","key","expectedPallets","expected_pallets","incorrectLoadedPallets","loaded_pallets","name","includes","index_es","missedPallets","toConsumableArray","concat","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","renderNotificationIcon","color","onClick","badgeContent","Notifications_default","a","position","variant","component","className","classNames","button","leftMargin","style","flexGrow","React","withStyles","theme","palette","getContrastText","teal","backgroundColor","&:hover","borderBottom","marginLeft","createMuiTheme","primary","main","secondary","pink","Layout","_ref","children","objectWithoutProperties","core_styles","Layout_Topbar","Dashboard","pallets","getPallets","values","numOfPallets","pallet","moment","shipment_date","isSame","divider","root","container","spacing","fluid","item","xs","row","card","textAlign","minHeight","padding","marginBottom","PaletteTable","palletInterval","columns","Header","accessor","Cell","value","format","es","filterable","AddPaletteModal","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","shipDate","handleTextFieldChange","defineProperty","target","submitNewPalette","newPalette","date_created","patch","closeDialog","inherits","createClass","fullWidth","label","onChange","margin","type","Palettes","handleAddPalette","AddPaletteModal_AddPaletteModal","Table","Reports","Zones","readyPallets","current_pallets","loadedPallets","zone","elevation","border","& h4","display","width","height","lineHeight","App","react_default","createElement","BrowserRouter","Layout_Layout","Switch","Route","exact","path","Component","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gZASMA,EAAgB,SAAAC,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,KAAQL,KAC1CM,EAAc,SAAAN,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,aAAgBL,KAChDO,EAAW,SAAAP,GAAK,OAAIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAG,UAAaL,KAG1CQ,6MACFC,MAAQ,CACJC,SAAU,KACVC,MAAO,MAGXC,aAAe,OAWfC,SAAW,WAEPC,IAAMC,IADI,0DAETC,KAAK,SAAAC,GACFC,EAAKC,SAAS,CAACR,MAAOM,EAASG,SAElCC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,QAItBG,sBAAwB,SAAAC,GACxBR,EAAKC,SAAS,CAAET,SAAUgB,EAAMC,mBAGhCC,gBAAkB,WACdV,EAAKC,SAAS,CAAET,SAAU,2FAxB1BmB,KAAKhB,WACLgB,KAAKjB,aAAekB,YAAYD,KAAKhB,SAAU,qDAI/CkB,cAAcF,KAAKjB,+CAsBf,IACCF,EAAYmB,KAAKpB,MAAjBC,SACAsB,EAAWH,KAAK7B,MAAhBgC,QACCC,EAAaC,QAAQxB,GAEvByB,EAAkB,EAElBC,EAAaP,KAAKpB,MAAME,MACxB0B,EAAgB,KAEjBD,IACCC,EAAgBlC,OAAOmC,KAAKF,GAAYG,IAAI,SAACC,GACzC,IAAIC,EAAkB,KACnBL,EAAWI,GAAKE,mBACfD,EAAkBL,EAAWI,GAAKE,kBAEtC,IAAIC,EAAyB,GAE1BP,EAAWI,GAAKI,gBAAkBH,IACjCE,EAAyBP,EAAWI,GAAKI,eAAeL,IAAI,SAACM,GACzD,IAAIA,EAAKC,SAASN,KAASC,EAAgBK,SAASD,GAEhD,OADAV,IACOlC,EAAA,cAAC8C,EAAA,EAAD,KAAU9C,EAAA,cAAC8C,EAAA,EAAD,KAAaF,EAAb,+CAK7B,IAAIG,EAAgB,GAYpB,OAXGZ,EAAWI,GAAKI,gBAAkBH,IACjCO,EAAgBZ,EAAWI,GAAKE,iBAAiBH,IAAI,SAACM,GAClD,IAAIT,EAAWI,GAAKI,eAAeE,SAASD,GAExC,OADAV,IACOlC,EAAA,cAAC8C,EAAA,EAAD,KAAU9C,EAAA,cAAC8C,EAAA,EAAD,KAAaF,EAAb,wBAAwCL,OAO9DrC,OAAA8C,EAAA,EAAA9C,CAAIwC,GAAXO,OAAA/C,OAAA8C,EAAA,EAAA9C,CAAsC6C,OAGvB,IAApBb,IACCE,EAAiBpC,EAAA,cAAC8C,EAAA,EAAD,8BAErB,IAAMI,EACFlD,EAAA,cAAC8C,EAAA,EAAD,CACErC,SAAUA,EACV0C,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDE,KAAMvB,EACNwB,QAAS5B,KAAKD,iBAEbS,GAIDqB,EACFvB,EAAgB,EAEZlC,EAAA,cAAC8C,EAAA,EAAD,CAAYY,MAAM,UAAUC,QAAS/B,KAAKJ,uBACtCxB,EAAA,cAAC8C,EAAA,EAAD,CAAOc,aAAc1B,EAAiBwB,MAAM,aACxC1D,EAAA,cAAC6D,EAAAC,EAAD,QAKR9D,EAAA,cAAC8C,EAAA,EAAD,CAAYY,MAAM,UAAUC,QAAS/B,KAAKJ,uBACtCxB,EAAA,cAAC6D,EAAAC,EAAD,OAKZ,OACI9D,EAAA,cAAC8C,EAAA,EAAD,CAAQiB,SAAS,UACb/D,EAAA,cAAC8C,EAAA,EAAD,KACI9C,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,KAAKN,MAAM,WAA/B,gBACA1D,EAAA,cAAC8C,EAAA,EAAD,CAAQmB,UAAWnE,EAAeoE,UAAWC,IAAWpC,EAAQqC,OAAQrC,EAAQsC,aAAhF,aACArE,EAAA,cAAC8C,EAAA,EAAD,CAAQmB,UAAW5D,EAAa6D,UAAWnC,EAAQqC,QAAnD,WACApE,EAAA,cAAC8C,EAAA,EAAD,CAAQmB,UAAW3D,EAAU4D,UAAWnC,EAAQqC,QAAhD,SACApE,EAAA,qBAAKsE,MAAO,CAACC,SAAU,KACvBvE,EAAA,yBACKyD,GAEJP,WAxHAsB,aA6INC,uBAdA,SAAAC,GAAK,MAAK,CACrBN,OAAQ,CACJV,MAAOgB,EAAMC,QAAQC,gBAAgBC,OAAK,MAC1CC,gBAAiBD,OAAK,KACtBE,UAAW,CACPD,gBAAiBD,OAAK,KACtBG,aAAc,oBAGtBX,WAAY,CACRY,WAAY,UAILR,CAAmBlE,GCtJ5BmE,EAAQQ,yBAAe,CACzBP,QAAS,CACPQ,QAAS,CAAEC,KAAMP,OAAK,MACtBQ,UAAW,CAAED,KAAME,OAAI,SAIhBC,EAAS,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,SAAwBvF,OAAAwF,EAAA,EAAAxF,CAAAsF,EAAA,cAC5C,OACIxF,EAAA,cAAC2F,EAAA,iBAAD,CAAkBjB,MAAOA,GACrB1E,EAAA,cAAC4F,EAAD,MACKH,qBCVXI,6MACFrF,MAAQ,CACJsF,QAAS,QAObC,WAAa,WAETlF,IAAMC,IADI,8DAETC,KAAK,SAAAC,GACFC,EAAKC,SAAS,CAAC4E,QAAS5F,OAAO8F,OAAOhF,EAASG,UAElDC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,yFAVlBO,KAAKmE,8CAcD,IACChE,EAAWH,KAAK7B,MAAhBgC,QAED+D,EAAU,KACVG,EAAe,EAYnB,OAVGrE,KAAKpB,MAAMsF,UACVA,EAAUlE,KAAKpB,MAAMsF,QAAQxD,IAAI,SAAC4D,GAC9B,OAAG,IAAIC,IAAOD,EAAOE,eAAeC,OAAO,IAAIF,IAAU,QACrDF,IACOjG,EAAA,cAAC8C,EAAA,EAAD,CAAUwD,SAAO,GAACtG,EAAA,cAAC8C,EAAA,EAAD,KAAeoD,EAAOtD,QAEvC,QAKhB5C,EAAA,qBAAKkE,UAAWnC,EAAQwE,MACpBvG,EAAA,cAAC8C,EAAA,EAAD,CAAM0D,WAAS,EAACC,QAAS,GAAIvC,UAAWnC,EAAQ2E,OAC5C1G,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAI1C,UAAWnC,EAAQ8E,KAAK7G,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,MAApB,aAAgDhE,EAAA,cAAC8C,EAAA,EAAD,OAC3F9C,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,EAAG1C,UAAWnC,EAAQ8E,KACjC7G,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,MAApB,0BACAhE,EAAA,cAAC8C,EAAA,EAAD,CAAOoB,UAAWnC,EAAQ+E,MACtB9G,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,KAAKM,MAAO,CAACyC,UAAW,WAAYd,EAAxD,cACAjG,EAAA,cAAC8C,EAAA,EAAD,KACKgD,cA7CTtB,aAwETC,uBAjBA,CACX8B,KAAM,CACFhC,SAAU,EACVO,gBAAiB,UACjBkC,UAAW,SAEfN,MAAO,CACHO,QAAS,QAEbJ,IAAK,CACDK,aAAc,QAElBJ,KAAM,CACFG,QAAS,SAIFxC,CAAmBoB,YCtBnBsB,6MAjDb3G,MAAQ,CACNsF,QAAS,MAGXsB,eAAiB,OAWjBrB,WAAa,WAETlF,IAAMC,IADI,8DAETC,KAAK,SAAAC,GACFC,EAAKC,SAAS,CAAC4E,QAAS5F,OAAO8F,OAAOhF,EAASG,UAElDC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,yFAflBO,KAAKmE,aACLnE,KAAKwF,eAAkBvF,YAAYD,KAAKmE,WAAY,qDAItDjE,cAAcF,KAAKwF,iDAcnB,IAAMC,EAAU,CAAC,CACbC,OAAQ,eACRC,SAAU,eACVC,KAAM,SAAAzH,GAAK,OAAIC,EAAA,0BAAO,IAAImG,IAAOpG,EAAM0H,OAAOC,OAAO,oBACrD,CACAJ,OAAQ,OACRC,SAAU,QACT,CACDD,OAAQ,qBACRC,SAAU,gBACVC,KAAM,SAAAzH,GAAK,OAAIC,EAAA,0BAAO,IAAImG,IAAOpG,EAAM0H,OAAOC,OAAO,qBAGzD,OACI1H,EAAA,cAAC2H,EAAA,EAAD,CACIxG,KAAMS,KAAKpB,MAAMsF,QACjBuB,QAASA,EACTO,YAAU,WA5CKpD,qBCDdqD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9G,EAAAf,OAAA8H,EAAA,EAAA9H,CAAA0B,KAAAiG,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAArH,EAAAf,OAAAqI,EAAA,EAAArI,CAAA0B,MAAAmG,EAAA7H,OAAAsI,EAAA,EAAAtI,CAAA2H,IAAAY,KAAAC,MAAAX,EAAA,CAAAnG,MAAAqB,OAAAmF,MACI5H,MAAQ,CACJoC,KAAM,GACN+F,UAAU,IAAIxC,KAASuB,OAAO,qBAHtCzG,EAMI2H,sBAAwB,SAAAhG,GAAI,OAAI,SAAAvB,GAC5BJ,EAAKC,SAALhB,OAAA2I,EAAA,EAAA3I,CAAA,GAAgB0C,EAAOvB,EAAEyH,OAAOrB,UAPxCxG,EAUI8H,iBAAmB,WACf,IACIC,EAAU9I,OAAA2I,EAAA,EAAA3I,CAAA,GAAKe,EAAKT,MAAMoC,KAAO,CACjCA,KAAM3B,EAAKT,MAAMoC,KACjBqG,aAAc,IAAI9C,IAClBC,cAAenF,EAAKT,MAAMmI,WAG9B9H,IAAMqI,MAPI,6DAOOF,GAChBjI,KAAK,SAAAC,GACFC,EAAKlB,MAAMoJ,cACXlI,EAAKC,SAAS,CAAC0B,KAAM,GAAI+F,UAAU,IAAIxC,KAASuB,OAAO,wBAE1DtG,MAAM,SAAAC,GACHC,QAAQC,MAAMF,MAxB1BJ,EAAA,OAAAf,OAAAkJ,EAAA,EAAAlJ,CAAA2H,EAAAC,GAAA5H,OAAAmJ,EAAA,EAAAnJ,CAAA2H,EAAA,EAAAtF,IAAA,SAAAkF,MAAA,WA6BQ,OACIzH,EAAA,cAAC8C,EAAA,EAAD,CAAQS,KAAM3B,KAAK7B,MAAMwD,KAAMC,QAAS5B,KAAK7B,MAAMoJ,aAC/CnJ,EAAA,cAAC8C,EAAA,EAAD,0BACA9C,EAAA,cAAC8C,EAAA,EAAD,KACI9C,EAAA,cAAC8C,EAAA,EAAD,CACIwG,WAAS,EACTtF,QAAQ,SACRuF,MAAM,OACN9B,MAAO7F,KAAKpB,MAAMoC,KAClB4G,SAAU5H,KAAKgH,sBAAsB,QACrCa,OAAO,WACPzJ,EAAA,cAAC8C,EAAA,EAAD,CACAwG,WAAS,EACTtF,QAAQ,SACRuF,MAAM,yBACN9B,MAAO7F,KAAKpB,MAAMmI,SAClBa,SAAU5H,KAAKgH,sBAAsB,YACrCa,OAAO,SACPC,KAAK,oBAEb1J,EAAA,cAAC8C,EAAA,EAAD,KACI9C,EAAA,cAAC8C,EAAA,EAAD,CAAQa,QAAS/B,KAAK7B,MAAMoJ,YAAazF,MAAM,WAA/C,UAGA1D,EAAA,cAAC8C,EAAA,EAAD,CAAQa,QAAS/B,KAAKmH,iBAAkBrF,MAAM,WAA9C,aArDpBmE,EAAA,CAAqCrD,aCC/BmF,6MACFnJ,MAAQ,CACJ+C,MAAM,KAGVqG,iBAAmB,WACf3I,EAAKC,SAAS,CAACqC,MAAM,OAGzB4F,YAAc,WACVlI,EAAKC,SAAS,CAACqC,MAAM,6EAGjB,IACCxB,EAAWH,KAAK7B,MAAhBgC,QACL,OACI/B,EAAA,qBAAKkE,UAAWnC,EAAQwE,MACpBvG,EAAA,cAAC8C,EAAA,EAAD,CAAM0D,WAAS,EAACC,QAAS,GAAIvC,UAAWnC,EAAQ2E,OAC5C1G,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAI1C,UAAWnC,EAAQ8E,KAAK7G,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,MAApB,WAA8ChE,EAAA,cAAC8C,EAAA,EAAD,OACzF9C,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAI1C,UAAWnC,EAAQ8E,KAClC7G,EAAA,cAAC8C,EAAA,EAAD,CAAQkB,QAAQ,YAAYN,MAAM,UAAUC,QAAS/B,KAAKgI,kBAA1D,cACA5J,EAAA,cAAC6J,EAAD,CAAiBtG,KAAM3B,KAAKpB,MAAM+C,KAAM4F,YAAavH,KAAKuH,eAE9DnJ,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAI1C,UAAWnC,EAAQ8E,KAClC7G,EAAA,cAAC8C,EAAA,EAAD,KAAO9C,EAAA,cAAC8J,EAAD,CAAO3I,KAAMS,KAAKpB,MAAMsF,qBAxBhCtB,aA6CRC,uBAbA,CACX8B,KAAM,CACFhC,SAAU,EACVO,gBAAiB,WAErB4B,MAAO,CACHO,QAAS,QAEbJ,IAAK,CACDK,aAAc,SAIPzC,CAAmBkF,GChDrBI,EAAS,WAClB,OACI/J,EAAA,cAAC8C,EAAA,EAAD,CAAM0D,WAAS,GAAf,YCAFwD,6MACFxJ,MAAQ,CACJE,MAAO,MAGXC,aAAe,OAWfC,SAAW,WAEPC,IAAMC,IADI,0DAETC,KAAK,SAAAC,GACFC,EAAKC,SAAS,CAACR,MAAOM,EAASG,SAElCC,MAAM,SAAAC,GACHC,QAAQC,MAAMF,yFAflBO,KAAKhB,WACLgB,KAAKjB,aAAekB,YAAYD,KAAKhB,SAAU,qDAI/CkB,cAAcF,KAAKjB,+CAcf,IACCoB,EAAWH,KAAK7B,MAAhBgC,QACDI,EAAaP,KAAKpB,MAAME,MACxBA,EAAQ,KAyCZ,OAxCGyB,IACCzB,EAAQR,OAAOmC,KAAKF,GAAYG,IAAI,SAACC,GACjC,IAAI0H,EAAgBjK,EAAA,cAAC8C,EAAA,EAAD,CAAYwB,MAAO,CAACyC,UAAW,WAA/B,QACjB5E,EAAWI,GAAK2H,kBACfD,EAAe9H,EAAWI,GAAK2H,gBAAgB5H,IAAI,SAACM,GAChD,OAAIA,EAAKC,SAASN,GAGPvC,EAAA,cAAC8C,EAAA,EAAD,CAAOoB,UAAWnC,EAAQmE,QAAStD,GAFnC5C,EAAA,cAAC8C,EAAA,EAAD,CAAOoB,UAAWnC,EAAQmE,OAAQ5B,MAAO,CAACQ,gBAAiB,YAAalC,MAM3F,IAAIJ,EAAkB,KACnBL,EAAWI,GAAKE,mBACfD,EAAkBL,EAAWI,GAAKE,kBAEtC,IAAI0H,EAAiBnK,EAAA,cAAC8C,EAAA,EAAD,CAAYwB,MAAO,CAACyC,UAAW,WAA/B,QAUrB,OATG5E,EAAWI,GAAKI,gBAAkBH,IACjC2H,EAAgBhI,EAAWI,GAAKI,eAAeL,IAAI,SAACM,GAChD,OAAIA,EAAKC,SAASN,IAASC,EAAgBK,SAASD,GAGzC5C,EAAA,cAAC8C,EAAA,EAAD,CAAOoB,UAAWnC,EAAQmE,QAAStD,GAFnC5C,EAAA,cAAC8C,EAAA,EAAD,CAAOoB,UAAWnC,EAAQmE,OAAQ5B,MAAO,CAACQ,gBAAiB,YAAalC,MAOvF5C,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GACX5G,EAAA,qBAAKkE,UAAWnC,EAAQqI,MACpBpK,EAAA,cAAC8C,EAAA,EAAD,CAAOuH,UAAW,GAAGrK,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,MAAMzB,IAC/CvC,EAAA,cAAC8C,EAAA,EAAD,wBACCqH,EACDnK,EAAA,cAAC8C,EAAA,EAAD,CAASoB,UAAWnC,EAAQuE,UAC5BtG,EAAA,cAAC8C,EAAA,EAAD,sBACCmH,OAOjBjK,EAAA,qBAAKkE,UAAWnC,EAAQwE,MACpBvG,EAAA,cAAC8C,EAAA,EAAD,CAAM0D,WAAS,EAACC,QAAS,GAAIvC,UAAWnC,EAAQ2E,OAC5C1G,EAAA,cAAC8C,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAI1C,UAAWnC,EAAQ8E,KAAK7G,EAAA,cAAC8C,EAAA,EAAD,CAAYkB,QAAQ,MAApB,SAA4ChE,EAAA,cAAC8C,EAAA,EAAD,OACtFpC,WA3ED8D,aAkHLC,uBAhCA,CACX8B,KAAM,CACFhC,SAAU,EACVO,gBAAiB,UACjBkC,UAAW,SAEfN,MAAO,CACHO,QAAS,QAEbJ,IAAK,CACDK,aAAc,QAElBkD,KAAM,CACFnD,QAAS,OACTqD,OAAQ,qBACRC,OAAQ,CACJxD,UAAW,WAGnBb,OAAQ,CACJsE,QAAS,eACTC,MAAO,OACPC,OAAQ,OACRjB,OAAQ,OACRkB,WAAY,OACZ5D,UAAW,UAEfT,QAAS,CACLY,aAAc,SAIPzC,CAAmBuF,GChGnBY,mLAfX,OACEC,EAAA/G,EAAAgH,cAACC,EAAA,EAAD,KACEF,EAAA/G,EAAAgH,cAACE,EAAD,KACEH,EAAA/G,EAAAgH,cAACG,EAAA,EAAD,KACEJ,EAAA/G,EAAAgH,cAACI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInH,UAAW4B,IACjCgF,EAAA/G,EAAAgH,cAACI,EAAA,EAAD,CAAOE,KAAK,YAAYnH,UAAW0F,IACnCkB,EAAA/G,EAAAgH,cAACI,EAAA,EAAD,CAAOE,KAAK,SAASnH,UAAW+F,IAChCa,EAAA/G,EAAAgH,cAACI,EAAA,EAAD,CAAOE,KAAK,WAAWnH,UAAW8F,cAT5BsB,aCMEpJ,QACW,cAA7BqJ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAA/G,EAAAgH,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlL,KAAK,SAAAmL,GACjCA,EAAaC","file":"static/js/main.6c84dcab.chunk.js","sourcesContent":["import * as React from 'react';\nimport {AppBar, Toolbar, Typography, Button, IconButton, Badge, Menu, MenuItem} from '@material-ui/core';\nimport {teal} from '@material-ui/core/colors';\nimport {withStyles} from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\nimport axios from 'axios';\n\nconst DashboardLink = props => <Link to=\"/\" {...props} />\nconst PaletteLink = props => <Link to=\"/palettes\" {...props} />\nconst ZoneLink = props => <Link to=\"/zones\" {...props} />\n//const ReportLink = props => <Link to=\"/reports\" {...props} />\n\nclass Topbar extends React.Component{\n    state = {\n        anchorEl: null,\n        zones: {}\n      };\n    \n    zoneInterval = null;\n\n    componentDidMount(){\n        this.getZones();\n        this.zoneInterval = setInterval(this.getZones, 4500);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.zoneInterval);\n    }\n\n    getZones = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Zone.json\";\n        axios.get(url)\n        .then(response => {\n            this.setState({zones: response.data});\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n    \n    handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n      };    \n\n    render(){\n        let {anchorEl} = this.state;\n        let {classes} = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n\n        let notificationNum = 0;\n\n        let zonesState = this.state.zones;\n        let notifications = null;\n\n        if(zonesState)\n            notifications = Object.keys(zonesState).map((key) => {\n                let expectedPallets = null;\n                if(zonesState[key].expected_pallets)\n                    expectedPallets = zonesState[key].expected_pallets;\n\n                let incorrectLoadedPallets = [];\n\n                if(zonesState[key].loaded_pallets && expectedPallets){\n                    incorrectLoadedPallets = zonesState[key].loaded_pallets.map((name) => {\n                        if(!name.includes(key) || !expectedPallets.includes(name)){\n                            notificationNum++;\n                            return <MenuItem><Typography>{name} has been loaded to the incorrect truck</Typography></MenuItem>\n                        }\n                    });\n                }\n\n                let missedPallets = [];\n                if(zonesState[key].loaded_pallets && expectedPallets){\n                    missedPallets = zonesState[key].expected_pallets.map((name) => {\n                        if(!zonesState[key].loaded_pallets.includes(name)){\n                            notificationNum++;\n                            return <MenuItem><Typography>{name} is missing in truck {key}</Typography></MenuItem>\n                        }\n                    });\n                }\n\n\n\n                return [...incorrectLoadedPallets, ...missedPallets];\n        });\n\n        if(notificationNum === 0)\n            notifications = (<MenuItem>No new notifications</MenuItem>);\n\n        const renderMenu = (\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={isMenuOpen}\n              onClose={this.handleMenuClose}\n            >\n              {notifications}\n            </Menu>\n          );\n\n        const renderNotificationIcon = \n            notificationNum>0 ?\n            (\n                <IconButton color=\"inherit\" onClick={this.handleProfileMenuOpen}>\n                    <Badge badgeContent={notificationNum} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n            ):\n            (\n                <IconButton color=\"inherit\" onClick={this.handleProfileMenuOpen}>\n                    <NotificationsIcon />\n                </IconButton>\n            )\n\n\n        return(\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <Typography variant=\"h5\" color=\"inherit\">InventoryLab</Typography>\n                    <Button component={DashboardLink} className={classNames(classes.button, classes.leftMargin)}>Dashboard</Button>\n                    <Button component={PaletteLink} className={classes.button}>Pallets</Button>\n                    <Button component={ZoneLink} className={classes.button}>Zones</Button>\n                    <div style={{flexGrow: 1}}></div>\n                    <div>\n                        {renderNotificationIcon}\n                    </div>\n                    {renderMenu}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nconst styles = theme => ({\n    button: {\n        color: theme.palette.getContrastText(teal[500]),\n        backgroundColor: teal[500],\n        '&:hover': {\n            backgroundColor: teal[500],\n            borderBottom: 'solid 2px white'\n        }\n    },\n    leftMargin: {\n        marginLeft: '50px'\n    }\n})\n\nexport default withStyles(styles)(Topbar);","import * as React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {teal, pink} from '@material-ui/core/colors';\nimport Topbar from './Topbar';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: { main: teal[500] },\n      secondary: { main: pink[\"A400\"] },\n    },\n  });\n\nexport const Layout = ({children, ...props}) => {\n    return(\n        <MuiThemeProvider theme={theme}>\n            <Topbar />\n                {children}\n        </MuiThemeProvider>\n    );\n}","import * as React from \"react\";\nimport { Grid, Typography, Divider, Paper, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\nimport moment from 'moment';\n\nclass Dashboard extends React.Component{\n    state = {\n        pallets: null\n    }\n\n    componentDidMount(){\n        this.getPallets();\n    }\n  \n    getPallets = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Palettes.json\";\n        axios.get(url)\n        .then(response => {\n            this.setState({pallets: Object.values(response.data)});\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n\n    render(){\n        let {classes} = this.props;\n\n        let pallets = null;\n        let numOfPallets = 0;\n\n        if(this.state.pallets){\n            pallets = this.state.pallets.map((pallet) => {\n                if(new moment(pallet.shipment_date).isSame(new moment(), 'day')){\n                    numOfPallets++;\n                    return <ListItem divider><ListItemText>{pallet.name}</ListItemText></ListItem>\n                }\n                else return null;\n            });\n        }\n\n        return(\n            <div className={classes.root}>\n                <Grid container spacing={16} className={classes.fluid}>\n                    <Grid item xs={12} className={classes.row}><Typography variant=\"h3\" >Dashboard</Typography><Divider /></Grid>\n                    <Grid item xs={4} className={classes.row}>\n                        <Typography variant=\"h6\">Pallets shipping today</Typography>\n                        <Paper className={classes.card}>\n                            <Typography variant=\"h5\" style={{textAlign: 'center'}}>{numOfPallets} pallet(s)</Typography>\n                            <List>\n                                {pallets}\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#f0f0f0',\n        minHeight: '100vh'\n    },\n    fluid: {\n        padding: '20px'\n    },\n    row: {\n        marginBottom: '10px'\n    },\n    card: {\n        padding: '10px'\n    }\n}\n\nexport default withStyles(styles)(Dashboard);","import * as React from 'react';\nimport ReactTable from \"react-table\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\n\nclass PaletteTable extends React.Component{\n  state = {\n    pallets: []\n  }\n\n  palletInterval = null;\n\n  componentDidMount(){\n      this.getPallets();\n      this.palletInterval =  setInterval(this.getPallets, 2500)\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.palletInterval);\n  }\n\n  getPallets = () => {\n      let url = \"https://foodbankpallettracker.firebaseio.com/Palettes.json\";\n      axios.get(url)\n      .then(response => {\n          this.setState({pallets: Object.values(response.data)});\n      })\n      .catch(e => {\n          console.error(e);\n      })\n  }\n  render(){\n    const columns = [{\n        Header: 'Date created',\n        accessor: 'date_created',\n        Cell: props => <span>{new moment(props.value).format('M/D/YY h:mm A')}</span>\n      },{\n        Header: 'Name',\n        accessor: 'name'\n      }, {\n        Header: 'Expected ship date',\n        accessor: 'shipment_date',\n        Cell: props => <span>{new moment(props.value).format('M/D/YY h:mm A')}</span>\n      }]\n    \n    return(\n        <ReactTable\n            data={this.state.pallets}\n            columns={columns}\n            filterable\n        />\n    );\n  }\n}\n\nexport default PaletteTable;","import * as React from 'react';\nimport {Dialog, DialogContent, DialogTitle, DialogActions, Button, TextField} from '@material-ui/core'\nimport axios from 'axios';\nimport moment from 'moment';\n\nexport class AddPaletteModal extends React.Component{\n    state = {\n        name: \"\",\n        shipDate: new moment().format('YYYY-MM-DDThh:mm')\n    }\n\n    handleTextFieldChange = name => e => {\n        this.setState({[name]: e.target.value});\n    }\n\n    submitNewPalette = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Palettes.json\";\n        let newPalette = {[this.state.name]: {\n            name: this.state.name,\n            date_created: new moment(),\n            shipment_date: this.state.shipDate\n        }}\n        \n        axios.patch(url, newPalette)\n        .then(response => {\n            this.props.closeDialog();\n            this.setState({name: \"\", shipDate: new moment().format('YYYY-MM-DDThh:mm')})\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n\n    render(){\n        return(\n            <Dialog open={this.props.open} onClose={this.props.closeDialog}>\n                <DialogTitle>Add a new Palette</DialogTitle>\n                <DialogContent>\n                    <TextField \n                        fullWidth \n                        variant=\"filled\" \n                        label=\"Name\" \n                        value={this.state.name} \n                        onChange={this.handleTextFieldChange('name')}\n                        margin=\"normal\"/>\n                        <TextField \n                        fullWidth \n                        variant=\"filled\" \n                        label=\"Shipment date and time\" \n                        value={this.state.shipDate} \n                        onChange={this.handleTextFieldChange('shipDate')}\n                        margin=\"normal\"\n                        type=\"datetime-local\"/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.props.closeDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.submitNewPalette} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}","import * as React from \"react\";\nimport { Grid, Typography, Divider, Button, Paper } from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Table from '../Palettes/Table';\nimport {AddPaletteModal} from '../Palettes/AddPaletteModal';\n\nclass Palettes extends React.Component{\n    state = {\n        open: false\n    }\n\n    handleAddPalette = () => {\n        this.setState({open: true});\n    }\n\n    closeDialog = () => {\n        this.setState({open: false});\n    }\n\n    render(){\n        let {classes} = this.props;\n        return(\n            <div className={classes.root}>\n                <Grid container spacing={16} className={classes.fluid}>\n                    <Grid item xs={12} className={classes.row}><Typography variant=\"h3\" >Pallets</Typography><Divider /></Grid>\n                    <Grid item xs={12} className={classes.row}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleAddPalette}>Add pallet</Button>\n                        <AddPaletteModal open={this.state.open} closeDialog={this.closeDialog}/>\n                    </Grid>\n                    <Grid item xs={12} className={classes.row}>\n                        <Paper><Table data={this.state.pallets}/></Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#f0f0f0'\n    },\n    fluid: {\n        padding: '20px'\n    },\n    row: {\n        marginBottom: '10px'\n    }\n}\n\nexport default withStyles(styles)(Palettes);","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const Reports =()=>{\n    return(\n        <Grid container>\n            Reports\n        </Grid>\n    );\n}","import * as React from \"react\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\n\nclass Zones extends React.Component{\n    state = {\n        zones: {}\n    }\n\n    zoneInterval = null;\n    \n    componentDidMount(){\n        this.getZones();\n        this.zoneInterval = setInterval(this.getZones, 2500);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.zoneInterval);\n    }\n\n    getZones = () => {\n        let url = \"https://foodbankpallettracker.firebaseio.com/Zone.json\";\n        axios.get(url)\n        .then(response => {\n            this.setState({zones: response.data});\n        })\n        .catch(e => {\n            console.error(e);\n        })\n    }\n\n    render(){\n        let {classes} = this.props;\n        let zonesState = this.state.zones;\n        let zones = null;\n        if(zonesState)\n            zones = Object.keys(zonesState).map((key) => {\n                let readyPallets = (<Typography style={{textAlign: 'center'}}>None</Typography>);\n                if(zonesState[key].current_pallets){\n                    readyPallets = zonesState[key].current_pallets.map((name) => {\n                        if(!name.includes(key))\n                            return <Paper className={classes.pallet} style={{backgroundColor: '#F44336'}}>{name}</Paper>\n                        else\n                            return <Paper className={classes.pallet}>{name}</Paper>\n                    })\n                }\n\n                let expectedPallets = null;\n                if(zonesState[key].expected_pallets)\n                    expectedPallets = zonesState[key].expected_pallets;\n\n                let loadedPallets = (<Typography style={{textAlign: 'center'}}>None</Typography>);;\n                if(zonesState[key].loaded_pallets && expectedPallets){\n                    loadedPallets = zonesState[key].loaded_pallets.map((name) => {\n                        if(!name.includes(key) || !expectedPallets.includes(name))\n                            return <Paper className={classes.pallet} style={{backgroundColor: '#F44336'}}>{name}</Paper>\n                        else\n                            return <Paper className={classes.pallet}>{name}</Paper>\n                    });\n                }\n\n                return (\n                    <Grid item xs={6} >\n                        <div className={classes.zone}>\n                            <Paper elevation={0}><Typography variant=\"h4\">{key}</Typography></Paper>\n                            <Typography>Loaded in truck</Typography>\n                            {loadedPallets}\n                            <Divider className={classes.divider}/>\n                            <Typography>Ready to load</Typography>\n                            {readyPallets}\n                        </div>\n                    </Grid>\n                )\n        });\n        \n        return(\n            <div className={classes.root}>\n                <Grid container spacing={24} className={classes.fluid}>\n                    <Grid item xs={12} className={classes.row}><Typography variant=\"h3\" >Zones</Typography><Divider /></Grid>\n                    {zones}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#f0f0f0',\n        minHeight: '100vh'\n    },\n    fluid: {\n        padding: '20px'\n    },\n    row: {\n        marginBottom: '10px'\n    },\n    zone: {\n        padding: '10px',\n        border: '2px dashed #616161',\n        '& h4': {\n            textAlign: 'center'\n        }\n    },\n    pallet: {\n        display: 'inline-block',\n        width: '50px',\n        height: '50px',\n        margin: '10px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    },\n    divider: {\n        marginBottom: '10px'\n    }\n}\n\nexport default withStyles(styles)(Zones);","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Layout} from './components/Layout';\nimport {Dashboard, Palettes, Reports, Zones} from './components/Pages'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}/>\n            <Route path=\"/palettes\" component={Palettes} />\n            <Route path=\"/zones\" component={Zones} />\n            <Route path=\"/reports\" component={Reports} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}